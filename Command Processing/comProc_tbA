module comProc_tb();

	reg clk,rst_n, Ok2Move, cmd_rdy, ID_vld;
	reg clr_cmd_rdy, clr_ID_vld, go, buzz, buzz_n, in_transit;
	reg [7:0] cmd, ID;
	
	reg [5:0] extra_bits;
	
	//Instantiation	
	comProc(.clk(clk), .rst_n(rst_n), .cmd_rdy(cmd_rdy), .cmd(cmd), .ID_vld(ID_vld),
		.Ok2Move(Ok2Move), .clr_cmd_rdy(clr_cmd_rdy), .go(go), .clr_ID_vld(clr_ID_vld),
		.buzz(buzz), .buzz_n(buzz_n), .in_transit(in_transit));
		
	//localparam GO_cmd = {2'b01, ID[5:0]};
	//localparam STOP_cmd = {2'b00,6'hxx};
	integer i;
	
	initial begin
		clk = 1'b0;
		rst_n = 1'b0;
		
		repeat(5)@(posedge clk);
		rst_n = 1'b1;
		
		//input cmd_rdy, ID_vld, Ok2Move;
		//input [7:0] cmd, ID;
		
		//Ok2Move is high
		Ok2Move = 1'b1;
		ID_vld = 1'b1;	
		extra_bits = $random;		
		ID = {2'b00, extra_bits}; //random ID with first 2-bits = 00 (ID valid condition);
		
		//--IDLE--//
		
		//(1) cmd != go, !cmd_rdy --> should get nothing, clr_cmd_rdy,clr_ID_valid, buzz, = 0
		//													buzz_n = 1, in_transit = 0
		
		for(i = 0; i < 5; i = i + 1) begin		//testing 5 random cmd signals
			cmd_rdy = 1'b0;
			cmd = $random;
			if(cmd == {2'b01, ID[5:0]} || cmd == {2'b00,6'hxx})
				$display("cmd = GO or STOP");
			else if (clr_cmd_rdy != 1'b0)begin
				$display ("ERROR:");
				$display ("clr_cmd_rdy = ", clr_cmd_rdy);
				end
			else if (clr_ID_vld != 1'b0)begin
				$display ("ERROR:");
				$display ("clr_ID_vld =", clr_ID_vld);
			end
			else if (buzz!= 1'b0)begin
				$display ("ERROR:");
				$display ("buzz =", buzz);
			end
			else if (buzz_n != 1'b1)begin
				$display ("ERROR:");
				$display ("buzz_n =", buzz_n);
			end
			else if (in_transit != 1'b0)begin
				$display ("ERROR:");
				$display ("in_transit =", in_transit);
			end
		end
			
		//(2) cmd == go, !cmd_rdy --> get nothing, 
		for(i = 0; i < 1; i = i + 1) begin		//testing cmd == go signal
			cmd_rdy = 1'b0;
			cmd = {2'b01, ID[5:0]};
			if(cmd == {2'b01, ID[5:0]} || cmd == {2'b00,6'hxx})
				$display("cmd = GO or STOP");
			else if (clr_cmd_rdy != 1'b0)begin
				$display ("ERROR:");
				$display ("clr_cmd_rdy = ", clr_cmd_rdy);
				end
			else if (clr_ID_vld != 1'b0)begin
				$display ("ERROR:");
				$display ("clr_ID_vld =", clr_ID_vld);
			end
			else if (buzz!= 1'b0)begin
				$display ("ERROR:");
				$display ("buzz =", buzz);
			end
			else if (buzz_n != 1'b1)begin
				$display ("ERROR:");
				$display ("buzz_n =", buzz_n);
			end
			else if (in_transit != 1'b0)begin
				$display ("ERROR:");
				$display ("in_transit =", in_transit);
			end
		end
		//(3) cmd != go, cmd_rdy --> get nothing,
		for(i = 0; i < 5; i = i + 1) begin		//testing cmd_rdy, cmd != go signal 5 times
			cmd_rdy = 1'b1;
			cmd = $random;
			if(cmd == {2'b01, ID[5:0]} || cmd == {2'b00,6'hxx})
				$display("cmd = GO or STOP");
			else if (clr_cmd_rdy != 1'b0)begin
				$display ("ERROR:");
				$display ("clr_cmd_rdy = ", clr_cmd_rdy);
				end
			else if (clr_ID_vld != 1'b0)begin
				$display ("ERROR:");
				$display ("clr_ID_vld =", clr_ID_vld);
			end
			else if (buzz!= 1'b0)begin
				$display ("ERROR:");
				$display ("buzz =", buzz);
			end
			else if (buzz_n != 1'b1)begin
				$display ("ERROR:");
				$display ("buzz_n =", buzz_n);
			end
			else if (in_transit != 1'b0)begin
				$display ("ERROR:");
				$display ("in_transit =", in_transit);
			end
		end
		//(4) cmd == go & cmd_rdy --> next state, in_transit goes high, dest_ID gets set 
		//											check dest_ID	//dest_ID = cmd[5:0]
		for(i = 0; i < 1; i = i + 1) begin		//testing cmd_rdy & cmd == go signal
			cmd_rdy = 1'b1;
			cmd = {2'b01, ID[5:0]};
			if(cmd == {2'b01, ID[5:0]} || cmd == {2'b00,6'hxx})
				$display("cmd = GO or STOP");
			else if (clr_cmd_rdy != 1'b0)begin
				$display ("ERROR:");
				$display ("clr_cmd_rdy = ", clr_cmd_rdy);
				end
			else if (clr_ID_vld != 1'b0)begin
				$display ("ERROR:");
				$display ("clr_ID_vld =", clr_ID_vld);
			end
			else if (buzz!= 1'b0)begin
				$display ("ERROR:");
				$display ("buzz =", buzz);
			end
			else if (buzz_n != 1'b1)begin
				$display ("ERROR:");
				$display ("buzz_n =", buzz_n);
			end
			else if (in_transit != 1'b0)begin
				$display ("ERROR:");
				$display ("in_transit =", in_transit);
			end
		end
		//--CMD_RDY--//
		//(1) cmd_rdy & cmd ==go  --> set_in_transit, set_dest_ID
		//				check dest_ID	//dest_ID = cmd[5:0]
		//(2) cmd_rdy & cmd !=go & cmd == stop --> clr_in_transit
			//cmd_rdy & cmd !=go & cmd == stop --> nxt_state: ID_vld, no high sigs
		//(3) !cmd_rdy --> next state = ID_VLD, no sigs.
		
		//--ID_vld--//
		//(1) --Go back to cmd_rdy--
		//			~ID_vld
		//			ID_vld & ID != dest_ID
		//(2) --Back to IDLE--
		//		ID_vld & ID == dest_ID --> clr_ID_vld, clr_in_transit
		
		//Ok2Move is low
	end
	
	always
		#5 clk = ~clk;

endmodule